@page "/users"
@inject IUserService UserService
@inject NavigationManager NavigationManager
@implements IDisposable

<h3>Super Heroes</h3>

@if (UserService.Users.Count == 0)
{
    <span>Loading Data..</span>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Username</th>
                <th>Group</th>
                <th colspan="3">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in UserService.Users)
            {
                <tr>
                    <td>@item.FirstName</td>
                    <td>@item.LastName</td>
                    <td>@item.Username</td>
                    <td>@item.Group.Name</td>
                    <td>
                        <button class="btn btn-primary" @onclick="(() => ShowUser(item.ID))">
                            Show
                        </button>
                    </td>
                    <td>
                        <button class="btn btn-primary" @onclick="(() => EditUser(item.ID))">
                            Edit
                        </button>   
                    </td>
                    <td>
                        <button class="btn btn-primary" @onclick="(() => DeleteUser(item.ID))">
                            Delete
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<EditUser User="user_data"></EditUser>

@code {
    bpgweb.Shared.Models.User user_data = new bpgweb.Shared.Models.User();

    protected override async Task OnInitializedAsync()
    {
        await UserService.GetUsers();
        UserService.OnChange += StateHasChanged;
    }

    void ShowUser(int ID)
    {
        NavigationManager.NavigateTo($"user/{ID}");
    }

    void EditUser(int ID)
    {
        user_data = UserService.Users.Find(u => u.ID == ID);
    }

    void DeleteUser(int ID)
    {
        UserService.DeleteUser(ID);
    }

    public void Dispose()
    {
        UserService.OnChange -= StateHasChanged;
    }
}
